## 📦 Technologies Used

- 🧠 Vanilla **JavaScript**
- 📘 **PDF.js** (for PDF parsing)
- 🎨 **HTML/CSS** with responsive and modern UI
- 🔥 No frameworks, libraries, or backend required

---

## 💡 How It Works

1. Upload a document.
2. The assistant extracts the content (text) from PDF or TXT files.
3. It splits the text into sentences and analyzes for:
   - Summary → First 3 sentences
   - Key Points → Top 5 long sentences
   - Conclusion → Last 2 sentences
   - Any custom user question → Best-matching sentence
4. Quiz questions are generated by blanking out a word from a random sentence.

---

## 🛠️ Setup & Usage

### ✅ Prerequisites

- A modern browser (Chrome, Firefox, Edge, etc.)
- Internet connection (to load PDF.js via CDN)

### 🧪 Run Locally

1. Clone the repository or download the `index.html` file.
2. Open `index.html` in your browser.
3. Upload a `.pdf` or `.txt` document to begin.

> Tip: You can host it using GitHub Pages or Netlify for quick sharing.

---

## ⚠️ Limitations

- Extracted content depends on document clarity and formatting.
- Answers are generated using basic string matching — no LLM is involved.
- Not suitable for scanned image PDFs (no OCR support).

---

## 📌 Example Questions to Ask

- _Summarize this document_
- _What is the main topic?_
- _Give me the key points_
- _Explain the conclusion_
- _What does it say about climate change?_ (or other custom queries)

---

## 🔮 Coming Soon (Ideas)

- [ ] Integrate OpenAI GPT for smarter answers.
- [ ] OCR support for scanned PDFs.
- [ ] Highlight sentence references in original document preview.
- [ ] Export summaries/quiz as PDFs.

---

## 🙌 Acknowledgements

- [PDF.js by Mozilla](https://mozilla.github.io/pdf.js/)
- Inspired by educational AI tools and GenAI assistants

---

## 📃 License

MIT License — free for personal and educational use

---

## 👨‍💻 Author

**Vibhaw Kumar Verma**

> Want help improving this further? Add GPT support, build a backend, or deploy to the cloud? Let me know!
